struct Node{
    Node* arr[26];
    bool flag;
     
    bool contains(char c)
    {
        return (arr[c - 'a'] != NULL);
    }
    
    void put(char c , Node* newNode)
    {
        arr[c - 'a'] = newNode;
    }
    
    Node* getNext(char c)
    {
        return arr[c - 'a'];
    }
    
    void setFlag()
    {
        flag = true;
    }
};


int countDistinctSubstrings(string &s)
{
    Node * root = new Node();
    int count = 1;
    
    int n = s.size();
  for (int i = 0; i < n; i++) {
    Node * node = root;

    for (int j = i; j < n; j++) {
      if (!node -> contains(s[j])) {
        node -> put(s[j], new Node());
        count++;
      }
      node = node -> getNext(s[j]);
    }

  }
  return count;

}
